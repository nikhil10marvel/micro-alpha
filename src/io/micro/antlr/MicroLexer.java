// Generated from /home/nikhil/Documents/Java/Micro/src/Micro.g4 by ANTLR 4.7
package io.micro.antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class MicroLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, FLOAT_ID=20, DOUBLE_ID=21, INT_ID=22, VOID_ID=23, 
		UNION_DEF=24, BOOL_ID=25, SHORT_ID=26, LONG_ID=27, INTEGER=28, HEXADECIMAL=29, 
		FLOAT=30, DOUBLE=31, STRING=32, TRUE=33, FALSE=34, IMPORT=35, EOS=36, 
		MODULE_SP=37, CMTCH=38, MCOMO=39, MCOMC=40, DEF=41, LPRM=42, RPRM=43, 
		LBRC=44, RBRC=45, LSQB=46, RSQB=47, AND=48, OR=49, LT=50, GT=51, LTE=52, 
		GTE=53, IF=54, WHILE=55, EQ=56, NOT=57, CONST=58, ELIF=59, ELSE=60, PARAM_SEP=61, 
		LOAD=62, INCLUDE=63, URL=64, CALL_t=65, UNION_t=66, INIT=67, SIMP_CHARS=68, 
		COMPLEX_CHARS=69, LINE_COMMENT=70, MULTI_COMMENT=71, WS=72;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "LETTER", "DIGIT", "HEX_DIGIT", "NOMSYM", "DOTSYM", 
		"FLOAT_ID", "DOUBLE_ID", "INT_ID", "VOID_ID", "UNION_DEF", "BOOL_ID", 
		"SHORT_ID", "LONG_ID", "INTEGER", "HEXADECIMAL", "FLOAT", "DOUBLE", "STRING", 
		"TRUE", "FALSE", "IMPORT", "EOS", "MODULE_SP", "CMTCH", "MCOMO", "MCOMC", 
		"DEF", "LPRM", "RPRM", "LBRC", "RBRC", "LSQB", "RSQB", "AND", "OR", "LT", 
		"GT", "LTE", "GTE", "IF", "WHILE", "EQ", "NOT", "CONST", "ELIF", "ELSE", 
		"PARAM_SEP", "LOAD", "INCLUDE", "URL", "CALL_t", "UNION_t", "INIT", "SIMP_CHARS", 
		"COMPLEX_CHARS", "LINE_COMMENT", "MULTI_COMMENT", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'+'", "'-'", "'*'", "'/'", "'var'", "'='", "'return'", "'!='", 
		"'FALSE'", "'False'", "'false'", "'TRUE'", "'True'", "'true'", "':'", 
		"'+='", "'-='", "'*='", "'/='", "'float'", "'double'", "'int'", "'void'", 
		"'union_def'", "'bool'", "'short'", "'long'", null, null, null, null, 
		null, null, null, "'import'", "';'", "'module'", "'##'", "'#^'", "'^#'", 
		null, "'('", "')'", "'{'", "'}'", "'['", "']'", null, null, "'<'", "'>'", 
		"'<='", "'>='", "'if'", "'while'", "'=='", null, "'const'", "'elif'", 
		"'else'", "','", "'require'", "'include'", "'url'", "'->'", "'<<'", "'init'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "FLOAT_ID", "DOUBLE_ID", 
		"INT_ID", "VOID_ID", "UNION_DEF", "BOOL_ID", "SHORT_ID", "LONG_ID", "INTEGER", 
		"HEXADECIMAL", "FLOAT", "DOUBLE", "STRING", "TRUE", "FALSE", "IMPORT", 
		"EOS", "MODULE_SP", "CMTCH", "MCOMO", "MCOMC", "DEF", "LPRM", "RPRM", 
		"LBRC", "RBRC", "LSQB", "RSQB", "AND", "OR", "LT", "GT", "LTE", "GTE", 
		"IF", "WHILE", "EQ", "NOT", "CONST", "ELIF", "ELSE", "PARAM_SEP", "LOAD", 
		"INCLUDE", "URL", "CALL_t", "UNION_t", "INIT", "SIMP_CHARS", "COMPLEX_CHARS", 
		"LINE_COMMENT", "MULTI_COMMENT", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public MicroLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Micro.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2J\u021d\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6"+
		"\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3"+
		"\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3"+
		"\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3"+
		"\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24\3\24\3"+
		"\25\5\25\u00e6\n\25\3\26\3\26\3\27\3\27\5\27\u00ec\n\27\3\30\3\30\3\31"+
		"\3\31\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3"+
		"!\3!\3!\3!\3!\3\"\6\"\u0123\n\"\r\"\16\"\u0124\3\"\5\"\u0128\n\"\3#\3"+
		"#\3#\3#\6#\u012e\n#\r#\16#\u012f\3$\6$\u0133\n$\r$\16$\u0134\3$\3$\6$"+
		"\u0139\n$\r$\16$\u013a\3$\3$\3%\6%\u0140\n%\r%\16%\u0141\3%\3%\6%\u0146"+
		"\n%\r%\16%\u0147\3%\5%\u014b\n%\3&\3&\7&\u014f\n&\f&\16&\u0152\13&\3&"+
		"\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\5\'\u015e\n\'\3(\3(\3(\3(\3(\3(\3"+
		"(\3(\3(\3(\5(\u016a\n(\3)\3)\3)\3)\3)\3)\3)\3*\3*\3+\3+\3+\3+\3+\3+\3"+
		"+\3,\3,\3,\3-\3-\3-\3.\3.\3.\3/\3/\3/\3/\3/\3/\5/\u018b\n/\3\60\3\60\3"+
		"\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\66\3\66\3"+
		"\66\5\66\u019e\n\66\3\67\3\67\3\67\3\67\5\67\u01a4\n\67\38\38\39\39\3"+
		":\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3=\3=\3=\3>\3>\3>\3?\3?\3?\3?\3?\3"+
		"?\3?\5?\u01c3\n?\3@\3@\3@\3@\3@\3@\3A\3A\3A\3A\3A\3B\3B\3B\3B\3B\3C\3"+
		"C\3D\3D\3D\3D\3D\3D\3D\3D\3E\3E\3E\3E\3E\3E\3E\3E\3F\3F\3F\3F\3G\3G\3"+
		"G\3H\3H\3H\3I\3I\3I\3I\3I\3J\3J\3J\3J\6J\u01fa\nJ\rJ\16J\u01fb\3K\3K\3"+
		"K\3K\6K\u0202\nK\rK\16K\u0203\3L\3L\7L\u0208\nL\fL\16L\u020b\13L\3L\3"+
		"L\3M\3M\7M\u0211\nM\fM\16M\u0214\13M\3M\3M\3M\3M\3N\3N\3N\3N\4\u0150\u0212"+
		"\2O\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35"+
		"\20\37\21!\22#\23%\24\'\25)\2+\2-\2/\2\61\2\63\26\65\27\67\309\31;\32"+
		"=\33?\34A\35C\36E\37G I!K\"M#O$Q%S&U\'W(Y)[*]+_,a-c.e/g\60i\61k\62m\63"+
		"o\64q\65s\66u\67w8y9{:};\177<\u0081=\u0083>\u0085?\u0087@\u0089A\u008b"+
		"B\u008dC\u008fD\u0091E\u0093F\u0095G\u0097H\u0099I\u009bJ\3\2\13\4\2C"+
		"\\c|\3\2\62;\4\2CHch\3\2aa\5\2\60\60aa~~\4\2HHhh\4\2FFff\4\2\f\f\17\17"+
		"\6\2\13\f\17\17\"\"cd\2\u0230\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t"+
		"\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2"+
		"\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2"+
		"\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2\63\3\2\2\2"+
		"\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2"+
		"\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M"+
		"\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2"+
		"\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2"+
		"\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s"+
		"\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2\177"+
		"\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2"+
		"\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2\2\u008f\3\2\2\2\2\u0091"+
		"\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097\3\2\2\2\2\u0099\3\2\2"+
		"\2\2\u009b\3\2\2\2\3\u009d\3\2\2\2\5\u009f\3\2\2\2\7\u00a1\3\2\2\2\t\u00a3"+
		"\3\2\2\2\13\u00a5\3\2\2\2\r\u00a9\3\2\2\2\17\u00ab\3\2\2\2\21\u00b2\3"+
		"\2\2\2\23\u00b5\3\2\2\2\25\u00bb\3\2\2\2\27\u00c1\3\2\2\2\31\u00c7\3\2"+
		"\2\2\33\u00cc\3\2\2\2\35\u00d1\3\2\2\2\37\u00d6\3\2\2\2!\u00d8\3\2\2\2"+
		"#\u00db\3\2\2\2%\u00de\3\2\2\2\'\u00e1\3\2\2\2)\u00e5\3\2\2\2+\u00e7\3"+
		"\2\2\2-\u00eb\3\2\2\2/\u00ed\3\2\2\2\61\u00ef\3\2\2\2\63\u00f1\3\2\2\2"+
		"\65\u00f7\3\2\2\2\67\u00fe\3\2\2\29\u0102\3\2\2\2;\u0107\3\2\2\2=\u0111"+
		"\3\2\2\2?\u0116\3\2\2\2A\u011c\3\2\2\2C\u0127\3\2\2\2E\u0129\3\2\2\2G"+
		"\u0132\3\2\2\2I\u013f\3\2\2\2K\u014c\3\2\2\2M\u015d\3\2\2\2O\u0169\3\2"+
		"\2\2Q\u016b\3\2\2\2S\u0172\3\2\2\2U\u0174\3\2\2\2W\u017b\3\2\2\2Y\u017e"+
		"\3\2\2\2[\u0181\3\2\2\2]\u018a\3\2\2\2_\u018c\3\2\2\2a\u018e\3\2\2\2c"+
		"\u0190\3\2\2\2e\u0192\3\2\2\2g\u0194\3\2\2\2i\u0196\3\2\2\2k\u019d\3\2"+
		"\2\2m\u01a3\3\2\2\2o\u01a5\3\2\2\2q\u01a7\3\2\2\2s\u01a9\3\2\2\2u\u01ac"+
		"\3\2\2\2w\u01af\3\2\2\2y\u01b2\3\2\2\2{\u01b8\3\2\2\2}\u01c2\3\2\2\2\177"+
		"\u01c4\3\2\2\2\u0081\u01ca\3\2\2\2\u0083\u01cf\3\2\2\2\u0085\u01d4\3\2"+
		"\2\2\u0087\u01d6\3\2\2\2\u0089\u01de\3\2\2\2\u008b\u01e6\3\2\2\2\u008d"+
		"\u01ea\3\2\2\2\u008f\u01ed\3\2\2\2\u0091\u01f0\3\2\2\2\u0093\u01f5\3\2"+
		"\2\2\u0095\u01fd\3\2\2\2\u0097\u0205\3\2\2\2\u0099\u020e\3\2\2\2\u009b"+
		"\u0219\3\2\2\2\u009d\u009e\7-\2\2\u009e\4\3\2\2\2\u009f\u00a0\7/\2\2\u00a0"+
		"\6\3\2\2\2\u00a1\u00a2\7,\2\2\u00a2\b\3\2\2\2\u00a3\u00a4\7\61\2\2\u00a4"+
		"\n\3\2\2\2\u00a5\u00a6\7x\2\2\u00a6\u00a7\7c\2\2\u00a7\u00a8\7t\2\2\u00a8"+
		"\f\3\2\2\2\u00a9\u00aa\7?\2\2\u00aa\16\3\2\2\2\u00ab\u00ac\7t\2\2\u00ac"+
		"\u00ad\7g\2\2\u00ad\u00ae\7v\2\2\u00ae\u00af\7w\2\2\u00af\u00b0\7t\2\2"+
		"\u00b0\u00b1\7p\2\2\u00b1\20\3\2\2\2\u00b2\u00b3\7#\2\2\u00b3\u00b4\7"+
		"?\2\2\u00b4\22\3\2\2\2\u00b5\u00b6\7H\2\2\u00b6\u00b7\7C\2\2\u00b7\u00b8"+
		"\7N\2\2\u00b8\u00b9\7U\2\2\u00b9\u00ba\7G\2\2\u00ba\24\3\2\2\2\u00bb\u00bc"+
		"\7H\2\2\u00bc\u00bd\7c\2\2\u00bd\u00be\7n\2\2\u00be\u00bf\7u\2\2\u00bf"+
		"\u00c0\7g\2\2\u00c0\26\3\2\2\2\u00c1\u00c2\7h\2\2\u00c2\u00c3\7c\2\2\u00c3"+
		"\u00c4\7n\2\2\u00c4\u00c5\7u\2\2\u00c5\u00c6\7g\2\2\u00c6\30\3\2\2\2\u00c7"+
		"\u00c8\7V\2\2\u00c8\u00c9\7T\2\2\u00c9\u00ca\7W\2\2\u00ca\u00cb\7G\2\2"+
		"\u00cb\32\3\2\2\2\u00cc\u00cd\7V\2\2\u00cd\u00ce\7t\2\2\u00ce\u00cf\7"+
		"w\2\2\u00cf\u00d0\7g\2\2\u00d0\34\3\2\2\2\u00d1\u00d2\7v\2\2\u00d2\u00d3"+
		"\7t\2\2\u00d3\u00d4\7w\2\2\u00d4\u00d5\7g\2\2\u00d5\36\3\2\2\2\u00d6\u00d7"+
		"\7<\2\2\u00d7 \3\2\2\2\u00d8\u00d9\7-\2\2\u00d9\u00da\7?\2\2\u00da\"\3"+
		"\2\2\2\u00db\u00dc\7/\2\2\u00dc\u00dd\7?\2\2\u00dd$\3\2\2\2\u00de\u00df"+
		"\7,\2\2\u00df\u00e0\7?\2\2\u00e0&\3\2\2\2\u00e1\u00e2\7\61\2\2\u00e2\u00e3"+
		"\7?\2\2\u00e3(\3\2\2\2\u00e4\u00e6\t\2\2\2\u00e5\u00e4\3\2\2\2\u00e6*"+
		"\3\2\2\2\u00e7\u00e8\t\3\2\2\u00e8,\3\2\2\2\u00e9\u00ec\5+\26\2\u00ea"+
		"\u00ec\t\4\2\2\u00eb\u00e9\3\2\2\2\u00eb\u00ea\3\2\2\2\u00ec.\3\2\2\2"+
		"\u00ed\u00ee\t\5\2\2\u00ee\60\3\2\2\2\u00ef\u00f0\t\6\2\2\u00f0\62\3\2"+
		"\2\2\u00f1\u00f2\7h\2\2\u00f2\u00f3\7n\2\2\u00f3\u00f4\7q\2\2\u00f4\u00f5"+
		"\7c\2\2\u00f5\u00f6\7v\2\2\u00f6\64\3\2\2\2\u00f7\u00f8\7f\2\2\u00f8\u00f9"+
		"\7q\2\2\u00f9\u00fa\7w\2\2\u00fa\u00fb\7d\2\2\u00fb\u00fc\7n\2\2\u00fc"+
		"\u00fd\7g\2\2\u00fd\66\3\2\2\2\u00fe\u00ff\7k\2\2\u00ff\u0100\7p\2\2\u0100"+
		"\u0101\7v\2\2\u01018\3\2\2\2\u0102\u0103\7x\2\2\u0103\u0104\7q\2\2\u0104"+
		"\u0105\7k\2\2\u0105\u0106\7f\2\2\u0106:\3\2\2\2\u0107\u0108\7w\2\2\u0108"+
		"\u0109\7p\2\2\u0109\u010a\7k\2\2\u010a\u010b\7q\2\2\u010b\u010c\7p\2\2"+
		"\u010c\u010d\7a\2\2\u010d\u010e\7f\2\2\u010e\u010f\7g\2\2\u010f\u0110"+
		"\7h\2\2\u0110<\3\2\2\2\u0111\u0112\7d\2\2\u0112\u0113\7q\2\2\u0113\u0114"+
		"\7q\2\2\u0114\u0115\7n\2\2\u0115>\3\2\2\2\u0116\u0117\7u\2\2\u0117\u0118"+
		"\7j\2\2\u0118\u0119\7q\2\2\u0119\u011a\7t\2\2\u011a\u011b\7v\2\2\u011b"+
		"@\3\2\2\2\u011c\u011d\7n\2\2\u011d\u011e\7q\2\2\u011e\u011f\7p\2\2\u011f"+
		"\u0120\7i\2\2\u0120B\3\2\2\2\u0121\u0123\5+\26\2\u0122\u0121\3\2\2\2\u0123"+
		"\u0124\3\2\2\2\u0124\u0122\3\2\2\2\u0124\u0125\3\2\2\2\u0125\u0128\3\2"+
		"\2\2\u0126\u0128\5E#\2\u0127\u0122\3\2\2\2\u0127\u0126\3\2\2\2\u0128D"+
		"\3\2\2\2\u0129\u012a\7\62\2\2\u012a\u012b\7z\2\2\u012b\u012d\3\2\2\2\u012c"+
		"\u012e\5-\27\2\u012d\u012c\3\2\2\2\u012e\u012f\3\2\2\2\u012f\u012d\3\2"+
		"\2\2\u012f\u0130\3\2\2\2\u0130F\3\2\2\2\u0131\u0133\5+\26\2\u0132\u0131"+
		"\3\2\2\2\u0133\u0134\3\2\2\2\u0134\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135"+
		"\u0136\3\2\2\2\u0136\u0138\7\60\2\2\u0137\u0139\5+\26\2\u0138\u0137\3"+
		"\2\2\2\u0139\u013a\3\2\2\2\u013a\u0138\3\2\2\2\u013a\u013b\3\2\2\2\u013b"+
		"\u013c\3\2\2\2\u013c\u013d\t\7\2\2\u013dH\3\2\2\2\u013e\u0140\5+\26\2"+
		"\u013f\u013e\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u013f\3\2\2\2\u0141\u0142"+
		"\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0145\7\60\2\2\u0144\u0146\5+\26\2"+
		"\u0145\u0144\3\2\2\2\u0146\u0147\3\2\2\2\u0147\u0145\3\2\2\2\u0147\u0148"+
		"\3\2\2\2\u0148\u014a\3\2\2\2\u0149\u014b\t\b\2\2\u014a\u0149\3\2\2\2\u014a"+
		"\u014b\3\2\2\2\u014bJ\3\2\2\2\u014c\u0150\7$\2\2\u014d\u014f\13\2\2\2"+
		"\u014e\u014d\3\2\2\2\u014f\u0152\3\2\2\2\u0150\u0151\3\2\2\2\u0150\u014e"+
		"\3\2\2\2\u0151\u0153\3\2\2\2\u0152\u0150\3\2\2\2\u0153\u0154\7$\2\2\u0154"+
		"L\3\2\2\2\u0155\u0156\7v\2\2\u0156\u0157\7t\2\2\u0157\u0158\7w\2\2\u0158"+
		"\u015e\7g\2\2\u0159\u015a\7V\2\2\u015a\u015b\7t\2\2\u015b\u015c\7w\2\2"+
		"\u015c\u015e\7g\2\2\u015d\u0155\3\2\2\2\u015d\u0159\3\2\2\2\u015eN\3\2"+
		"\2\2\u015f\u0160\7h\2\2\u0160\u0161\7c\2\2\u0161\u0162\7n\2\2\u0162\u0163"+
		"\7u\2\2\u0163\u016a\7g\2\2\u0164\u0165\7h\2\2\u0165\u0166\7c\2\2\u0166"+
		"\u0167\7n\2\2\u0167\u0168\7u\2\2\u0168\u016a\7g\2\2\u0169\u015f\3\2\2"+
		"\2\u0169\u0164\3\2\2\2\u016aP\3\2\2\2\u016b\u016c\7k\2\2\u016c\u016d\7"+
		"o\2\2\u016d\u016e\7r\2\2\u016e\u016f\7q\2\2\u016f\u0170\7t\2\2\u0170\u0171"+
		"\7v\2\2\u0171R\3\2\2\2\u0172\u0173\7=\2\2\u0173T\3\2\2\2\u0174\u0175\7"+
		"o\2\2\u0175\u0176\7q\2\2\u0176\u0177\7f\2\2\u0177\u0178\7w\2\2\u0178\u0179"+
		"\7n\2\2\u0179\u017a\7g\2\2\u017aV\3\2\2\2\u017b\u017c\7%\2\2\u017c\u017d"+
		"\7%\2\2\u017dX\3\2\2\2\u017e\u017f\7%\2\2\u017f\u0180\7`\2\2\u0180Z\3"+
		"\2\2\2\u0181\u0182\7`\2\2\u0182\u0183\7%\2\2\u0183\\\3\2\2\2\u0184\u0185"+
		"\7f\2\2\u0185\u0186\7g\2\2\u0186\u018b\7h\2\2\u0187\u0188\7F\2\2\u0188"+
		"\u0189\7G\2\2\u0189\u018b\7H\2\2\u018a\u0184\3\2\2\2\u018a\u0187\3\2\2"+
		"\2\u018b^\3\2\2\2\u018c\u018d\7*\2\2\u018d`\3\2\2\2\u018e\u018f\7+\2\2"+
		"\u018fb\3\2\2\2\u0190\u0191\7}\2\2\u0191d\3\2\2\2\u0192\u0193\7\177\2"+
		"\2\u0193f\3\2\2\2\u0194\u0195\7]\2\2\u0195h\3\2\2\2\u0196\u0197\7_\2\2"+
		"\u0197j\3\2\2\2\u0198\u0199\7c\2\2\u0199\u019a\7p\2\2\u019a\u019e\7f\2"+
		"\2\u019b\u019c\7(\2\2\u019c\u019e\7(\2\2\u019d\u0198\3\2\2\2\u019d\u019b"+
		"\3\2\2\2\u019el\3\2\2\2\u019f\u01a0\7q\2\2\u01a0\u01a4\7t\2\2\u01a1\u01a2"+
		"\7~\2\2\u01a2\u01a4\7~\2\2\u01a3\u019f\3\2\2\2\u01a3\u01a1\3\2\2\2\u01a4"+
		"n\3\2\2\2\u01a5\u01a6\7>\2\2\u01a6p\3\2\2\2\u01a7\u01a8\7@\2\2\u01a8r"+
		"\3\2\2\2\u01a9\u01aa\7>\2\2\u01aa\u01ab\7?\2\2\u01abt\3\2\2\2\u01ac\u01ad"+
		"\7@\2\2\u01ad\u01ae\7?\2\2\u01aev\3\2\2\2\u01af\u01b0\7k\2\2\u01b0\u01b1"+
		"\7h\2\2\u01b1x\3\2\2\2\u01b2\u01b3\7y\2\2\u01b3\u01b4\7j\2\2\u01b4\u01b5"+
		"\7k\2\2\u01b5\u01b6\7n\2\2\u01b6\u01b7\7g\2\2\u01b7z\3\2\2\2\u01b8\u01b9"+
		"\7?\2\2\u01b9\u01ba\7?\2\2\u01ba|\3\2\2\2\u01bb\u01bc\7p\2\2\u01bc\u01bd"+
		"\7q\2\2\u01bd\u01c3\7v\2\2\u01be\u01bf\7P\2\2\u01bf\u01c0\7Q\2\2\u01c0"+
		"\u01c3\7V\2\2\u01c1\u01c3\7#\2\2\u01c2\u01bb\3\2\2\2\u01c2\u01be\3\2\2"+
		"\2\u01c2\u01c1\3\2\2\2\u01c3~\3\2\2\2\u01c4\u01c5\7e\2\2\u01c5\u01c6\7"+
		"q\2\2\u01c6\u01c7\7p\2\2\u01c7\u01c8\7u\2\2\u01c8\u01c9\7v\2\2\u01c9\u0080"+
		"\3\2\2\2\u01ca\u01cb\7g\2\2\u01cb\u01cc\7n\2\2\u01cc\u01cd\7k\2\2\u01cd"+
		"\u01ce\7h\2\2\u01ce\u0082\3\2\2\2\u01cf\u01d0\7g\2\2\u01d0\u01d1\7n\2"+
		"\2\u01d1\u01d2\7u\2\2\u01d2\u01d3\7g\2\2\u01d3\u0084\3\2\2\2\u01d4\u01d5"+
		"\7.\2\2\u01d5\u0086\3\2\2\2\u01d6\u01d7\7t\2\2\u01d7\u01d8\7g\2\2\u01d8"+
		"\u01d9\7s\2\2\u01d9\u01da\7w\2\2\u01da\u01db\7k\2\2\u01db\u01dc\7t\2\2"+
		"\u01dc\u01dd\7g\2\2\u01dd\u0088\3\2\2\2\u01de\u01df\7k\2\2\u01df\u01e0"+
		"\7p\2\2\u01e0\u01e1\7e\2\2\u01e1\u01e2\7n\2\2\u01e2\u01e3\7w\2\2\u01e3"+
		"\u01e4\7f\2\2\u01e4\u01e5\7g\2\2\u01e5\u008a\3\2\2\2\u01e6\u01e7\7w\2"+
		"\2\u01e7\u01e8\7t\2\2\u01e8\u01e9\7n\2\2\u01e9\u008c\3\2\2\2\u01ea\u01eb"+
		"\7/\2\2\u01eb\u01ec\7@\2\2\u01ec\u008e\3\2\2\2\u01ed\u01ee\7>\2\2\u01ee"+
		"\u01ef\7>\2\2\u01ef\u0090\3\2\2\2\u01f0\u01f1\7k\2\2\u01f1\u01f2\7p\2"+
		"\2\u01f2\u01f3\7k\2\2\u01f3\u01f4\7v\2\2\u01f4\u0092\3\2\2\2\u01f5\u01f9"+
		"\5)\25\2\u01f6\u01fa\5)\25\2\u01f7\u01fa\5+\26\2\u01f8\u01fa\5/\30\2\u01f9"+
		"\u01f6\3\2\2\2\u01f9\u01f7\3\2\2\2\u01f9\u01f8\3\2\2\2\u01fa\u01fb\3\2"+
		"\2\2\u01fb\u01f9\3\2\2\2\u01fb\u01fc\3\2\2\2\u01fc\u0094\3\2\2\2\u01fd"+
		"\u0201\5)\25\2\u01fe\u0202\5)\25\2\u01ff\u0202\5+\26\2\u0200\u0202\5\61"+
		"\31\2\u0201\u01fe\3\2\2\2\u0201\u01ff\3\2\2\2\u0201\u0200\3\2\2\2\u0202"+
		"\u0203\3\2\2\2\u0203\u0201\3\2\2\2\u0203\u0204\3\2\2\2\u0204\u0096\3\2"+
		"\2\2\u0205\u0209\5W,\2\u0206\u0208\n\t\2\2\u0207\u0206\3\2\2\2\u0208\u020b"+
		"\3\2\2\2\u0209\u0207\3\2\2\2\u0209\u020a\3\2\2\2\u020a\u020c\3\2\2\2\u020b"+
		"\u0209\3\2\2\2\u020c\u020d\bL\2\2\u020d\u0098\3\2\2\2\u020e\u0212\5Y-"+
		"\2\u020f\u0211\13\2\2\2\u0210\u020f\3\2\2\2\u0211\u0214\3\2\2\2\u0212"+
		"\u0213\3\2\2\2\u0212\u0210\3\2\2\2\u0213\u0215\3\2\2\2\u0214\u0212\3\2"+
		"\2\2\u0215\u0216\5[.\2\u0216\u0217\3\2\2\2\u0217\u0218\bM\2\2\u0218\u009a"+
		"\3\2\2\2\u0219\u021a\t\n\2\2\u021a\u021b\3\2\2\2\u021b\u021c\bN\3\2\u021c"+
		"\u009c\3\2\2\2\32\2\u00e5\u00eb\u0124\u0127\u012f\u0134\u013a\u0141\u0147"+
		"\u014a\u0150\u015d\u0169\u018a\u019d\u01a3\u01c2\u01f9\u01fb\u0201\u0203"+
		"\u0209\u0212\4\2\3\2\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}